만약 입력 숫자나
     계산 도중의 결과가
       음수가 되거나
       999를 넘어가면
         문제가 발생한다.

두 자리 이상 숫자를
  입력하고 싶다면
  연속해서 숫자를 터치하면 된다.
  -> 41을 만들고 싶다면 ‘4’’1’을 입력하면 된다.

연산은 순차적으로 이루어진다.
‘2’, ‘+’, ‘2’, ‘*’, ‘3’, ‘=’가 입력된다면
  먼저 들어온 연산자부터 계산되어 12가 된다.
  -> 2 + 2 = 4, 4 * 3 = 12

나누기는
  소수 이하의 부분은 버리고
  정수 부분만 남는다.
  -> ‘7’, ‘/’, ‘3’, ‘=’ 가 입력된다면 2가 된다.
  -> ‘1’, ‘/’, ‘5’, ‘=’ 라면 결과는 0이 된다.
  ->


0으로 나눠서는 아니된다.
터치 횟수가 M을 넘어서는 아니 된다.
터치 횟수가 M이 될 때까지
  원하는 숫자 W를 만들 수 없다면
  -1을 출력한다.

터치 가능한 숫자는 N가지 ( 1 <= N <= 10)
터치 가능한 연산자들의 개수는 O 가지 (1 <= O <= 4)
최대 터치 횟수 M. ( 4 <= M <= 20)

연산자
[0] = '='; // 언제나 사용 가능
[1] = '+';
[2] = '-';
[3] = '*';
[4] = '/';
-----------------------
테케별 입력
N O M
터치가능한 숫자 N 개
터치가능한 연산자 O 개
원하는 숫자
----------------------

M은 사실상 M-1과 다름없다 ( '=' 때문)
a / b = c 일때
(b * c) <= a < (b * (c+1) )

터치 m1 + m2 로 만들수 있는 경우의 수
m1 = 3*(1,2,3)
m2 = M - m1 - 1

--- 선행 가지치기 -----
원하는 타겟을 단일문자로 하나씩 받아서
  가능한 숫자가 전부 존재하면 딱 자릿수만큼

'+' 와 '*' 이 둘다 없으면
  숫자터치만으로 만들 수 있는 가장 큰 숫자 위로는 만들 수 없다
'-' 와 '/' 이 둘다 없으면
  숫자터치만으로 만들 수 있는 가장 작은 숫자 아래로는 만들 수 없다

애초에 목적이 0이 아닌 이상 중간에 0을 만들 필요가 없다
-> 목적이 0인 경우만 따로 빼서 먼저 판단하면?
-> 나눗셈,곱셈,뺄셈 등에서 0이 나오는 걸 가지치기 할 수 있다


1. 순수하게 입력 가능한 숫자만으로 조합 가능한 숫자
2. 그 외 연산이 필요한 숫자
3. 1에 해당되지만, 2가 더 터치 횟수가 적은 숫자
  -> 3에 해당하는 케이스가 있나????

----선행 가지치기 종료
선행 가지치기는 속도 향상보다
  특수한 상황을 미리 배제해놓고 나중에 따지지 않기 위함

여기까지 고려했으면 나머지는 완탐이다

